---
sudo: required

services: docker

env:
  - distro: alpine3
  - distro: centos6
  - distro: centos7
  - distro: debian7
  - distro: debian8
  - distro: ubuntu12.04
  - distro: ubuntu14.04
  - distro: ubuntu16.04

before_install:
  # Pull container.
  - 'docker pull williamyeh/ansible:${distro}'

script:
  - ${PWD}/tests/test-distro.sh ${distro}
  # Run container in detached state.
  #- 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role-under-test:ro --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro williamyeh/ansible:${distro} env TERM=xterm python /etc/ansible/roles/role-under-test/tests/trap.py > "${container_id}"'

  # Special case for alpine3 for apk to download packages
  #- 'if [ "${distro}" == "alpine3" ]; then docker exec --tty "$(cat ${container_id})" env TERM=xterm apk update; fi'

  # Ansible syntax check.
  #- 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -c local -i /etc/ansible/roles/role-under-test/tests/inventory /etc/ansible/roles/role-under-test/tests/test.yml --syntax-check'

  # Test role.
  #- 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -c local -i /etc/ansible/roles/role-under-test/tests/inventory /etc/ansible/roles/role-under-test/tests/test.yml'

  # Test role idempotence.
  #- idempotence=$(mktemp)
  #- docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -c local -i /etc/ansible/roles/role-under-test/tests/inventory /etc/ansible/roles/role-under-test/tests/test.yml | tee -a ${idempotence}
  #- >
  #  tail ${idempotence}
  #  | grep -q 'changed=0.*failed=0'
  #  && (echo 'Succeeded!' && exit 0)
  #  || (echo 'Failed!' && exit 1)

notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/
    email: false
    pushover:
      api_key:
        secure: U8xG2QLHAYdwEH5ZHzxsN5lWxgugCWHfhzdBU9BxGDnrIHLNbfkhPp8mQrUfgZyLqNdK7hoQTUeW3nl0/BgL9qlcXB0nqgE8eVPmdAfJRi0xueUq27SU3NGGyB+zcyj5lWqXnsYhbhZN8EJ92ECsLmdcqZpYTL2GSVMjaFW1Mq2CZpVaN7T7ycW1PkJoBzzVTl1LXmB226JfbQVh6fP2KDf6Y9oskOzqfkfUpl9v54ALKWmLoTmDff7z8uyA8YEJ3S4KsxO0aBRgqlbfAjeSf8wu7f9WQOjsjvhxjXlwzET98AZHvXwLJIi07XyqCmAW0THJF4RWuhSLKyg54ttZ1EfHF/JzGFgqqNDYVLUvCdqbS+Bw00oDt6Zv/xeaY3inCfTGcZ8b3WnFCyqJJ/oizlz59oAFz2VUSld7bRxFZ9V4p0h803K8BcHa0Tguadw2PZadBe8YZ5zez2R2PESEBY20TA0uXUzRgUKe4SsUGxpj29TegtSemfP6uj09VqtaF17G9Y0APkXOLWZtwI3aymfFseYeAM1kaO6rGRAWvpu6LehNHAnk6sfcnhRVHkXfuZPlw5tAS0qUGKl0Oztbf9riXRZ4k3g/CM52muQLPsMPXnzU384GLtnjWV8s4/FK6Vc/c9YvJaSSlO7PIj+jhiui2y6AFW+RupMLFJ9x0Kk=
      users:
        secure: jEluC1+xjX80z01gmP10bQVOG2gdmAHRwti/wZlzk+mRamdnq2vIcUnoT0HjNxGMfR3z2cU6ufTRGUQwGREX0tMl9WqsfFUJ4g1l8kZR6bD0jt5lFmg3eup4bF1VPD5wIWbXvVqPUibKAKGFKkRQSX5UAXzMAFpoYuAh74+RUiV0ISBmLntS/wW1j6DlIh2/e9I9yb0f/0MZlV8x2QBTHhTjnALzfvnoPEteSCfSawQUf9+pSNv4HyoPWJq2qafeA2hiPwC7AzQ4JhgdPKQ8P6yfSgqnwdG43kgNiZMqFMg/yn5n2f6vPMxiQn2T7Dq7As82G/v1bIAr1jhckEtF0AA9ydia4b7L/13nzbVIQyaP11KQx9MzWC1m28olnjfW8hTgTtlDJgfZJeB84H9fqYr64Lf/Mkji+FYPDQ8+9p1kvQic5qMxcvehGxAS2b/60NoboweaM78aCoEIsWXjMNT0xApWKvPQ7w/sjzIvDFiWLySB0kvzQvlwr2NhhC/Ycg8QA9NCupswv2aEbKbKbizkjjig8hc0ze09LAj9C2otLdtpP69WoZOY7FI6VVTdGzCNqI9oFCf0cOR8tWUkSg2ddwlVSi7XryPVniUh59Kb+sGklu1wXI3IiMcqtGGqqOvG0+aVP21yuuyAnpg2owXTOtOeUSQclNDBK597waE=
